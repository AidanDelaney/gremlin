!https://github.com/tinkerpop/gremlin/raw/master/doc/images/gremlin-standing-small.png!

Before diving into the specifics of Gremlin, its good to know what you are getting yourself into. Moreover, it's important to know if Gremlin can be of use to you. Below is a list of a few key reasons to use Gremlin.

* *Gremlin is useful for manually working with your graph*: You can use the Gremlin console like a file system prompt (see [[Basic Graph Traversals]]). You can navigate the graph, update vertex properties, add an edge, remove a vertex, etc. Gremlin is handy for graph maintenance and ensuring the integrity of your data. There is nothing worse that realizing that it's not your code, but your data that is bugged.
* *Gremlin allows you to query a graph*: As you work with Gremlin, you will notice that many types of queries can be expressed in Gremlin in a much more succinct and understandable manner than with traditional programming languages. If you are building an application that requires a graph query, then it might be best to use the Gremlin evaluator in your application.
* *Gremlin can express complex graph traversals succinctly*: Similar to what was stated previously, Gremlin can express in a few lines of code what it would take many, many lines of code in Java to express (see [[User Defined Steps]]). Moreover, Gremlin was designed to represent complex graph traversals. Even today's graph databases, frameworks, and packages lack the ability to express complex graph traversals -- something Gremlin can do very elegantly.
* *Gremlin is useful for exploring and learning about graphs*: There are many add-ons/connectors for Gremlin that make it a unique environment for playing with graphs. Gremlin comes with a connector to the JUNG algorithms package (see [[Working with JUNG Algorithms]]), to the SPARQL query language (see [[Sesame SAIL Quad Store]]), etc.
* *Gremlin allows you to explore the Semantic Web/Web of Data*: Gremlin can be used with "RDF":http://www.w3.org/RDF/ graphs. Moreover, Gremlin has a connector to [[LinkedData SAIL]] which allows you to work with the Semantic Web/Web of Data in real-time.
* *Gremlin ensures that you are not tied to a particular graph backend*: Gremlin can be used over various graph databases. Thus, you can make use of your same Gremlin code even when you change your graph database backend (see "Blueprints":http://blueprints.tinkerpop.com).
* *Gremlin allows for universal path-based computations*: Gremlin allows you to control, to the utmost degree, the execution of a traversal within a graph. This provides the flexibility to create sophisticated ways in which to analyze, query, and manipulate a graph.
* *Gremlin is extensible and can be oriented to your particular use case*: It is possible to extend Gremlin with new functions and steps defined natively in Gremlin or in Java (see [[User Defined Functions]] and [[User Defined Steps]]). Moreover, it's possible to add other graph backends by implementing the graph interfaces provided by "Blueprints":http://blueprints.tinkerpop.com.