Assuming:

* @A@ : id of the starting vertex
* @B@ : id of the ending vertex
* @N@ : maximum number of loops

h2. To find all paths in a directed graph:

```groovy
g.v(A).out.loop(1){it.loops<=N && !(it.object.id in [A,B])}[ [id:B] ].paths
```

h2. To find all paths in an undirected graph:

```groovy
g.v(A).both.loop(1){it.loops<=N && !(it.object.id in [A,B])}[ [id:B] ].paths
```

If [ [id:B] ] is too cryptic, replace it with .filter{it.id==B}

See examples at "https://gist.github.com/1156323":https://gist.github.com/1156323