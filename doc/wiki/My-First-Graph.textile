An example of loading a @Neo4jGraph@ with data, using an index to retrieve a vertex, and traversing one step out from that vertex.

```text
         \,,,/
         (o o)
-----oOOo-(_)-oOOo-----
gremlin> g = new Neo4jGraph('/tmp/deadgraph')
==>neo4jgraph[EmbeddedGraphDatabase [/tmp/deadgraph]]
gremlin> g.loadGraphML('data/graph-example-2.xml')
==>null
gremlin> g.idx(T.v)[[name:'DARK STAR']]
==>v[165]
gremlin> g.idx(T.v)[[name:'DARK STAR']].outE
==>e[3914][165-followed_by->84]
==>e[3915][165-followed_by->20]
==>e[3916][165-followed_by->97]
==>e[3917][165-followed_by->96]
==>e[3918][165-followed_by->4]
==>e[3919][165-followed_by->18]
==>e[3920][165-followed_by->89]
==>e[3921][165-followed_by->26]
==>e[3922][165-followed_by->92]
==>e[3923][165-followed_by->17]
==>e[3924][165-followed_by->14]
==>e[3925][165-followed_by->103]
==>e[3926][165-followed_by->105]
==>e[3927][165-followed_by->88]
==>e[3928][165-followed_by->79]
==>e[3929][165-followed_by->196]
==>e[3930][165-followed_by->181]
==>e[3931][165-followed_by->15]
==>e[3932][165-followed_by->95]
==>e[3933][165-followed_by->69]
==>e[3934][165-followed_by->232]
==>e[3935][165-followed_by->64]
==>e[3936][165-followed_by->93]
==>e[3937][165-followed_by->5]
==>e[3938][165-followed_by->11]
==>e[3939][165-followed_by->24]
==>e[3940][165-followed_by->35]
==>e[3941][165-followed_by->131]
==>e[3942][165-followed_by->192]
==>e[3943][165-followed_by->68]
==>e[3944][165-followed_by->80]
==>e[3945][165-followed_by->36]
==>e[3946][165-followed_by->144]
==>e[3947][165-followed_by->125]
==>e[3912][165-sung_by->9]
==>e[3913][165-written_by->94]
gremlin> g.shutdown()
==>null
```
